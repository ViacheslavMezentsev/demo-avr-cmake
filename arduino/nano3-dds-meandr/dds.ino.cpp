// Эта программа может работать как с arduino Nano так и с Uno.
#include "PinChangeInterrupt.h"
#include <CyberLib.h>
#include <avr/interrupt.h>

/// Псевдоним для вывода D8 платы.
#define btnint 8

/// Таблица волны синусоидальной формы.
const uint8_t sinewave[] =
{
    0x80, 0x83, 0x86, 0x89, 0x8c, 0x8f, 0x92, 0x95, 0x98, 0x9c, 0x9f, 0xa2, 0xa5, 0xa8,
    0xab, 0xae, 0xb0, 0xb3, 0xb6, 0xb9, 0xbc, 0xbf, 0xc1, 0xc4, 0xc7, 0xc9, 0xcc, 0xce,
    0xd1, 0xd3, 0xd5, 0xd8, 0xda, 0xdc, 0xde, 0xe0, 0xe2, 0xe4, 0xe6, 0xe8, 0xea, 0xec,
    0xed, 0xef, 0xf0, 0xf2, 0xf3, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfc,
    0xfd, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0xfe, 0xfd, 0xfc, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8, 0xf7, 0xf6, 0xf5, 0xf3, 0xf2,
    0xf0, 0xef, 0xed, 0xec, 0xea, 0xe8, 0xe6, 0xe4, 0xe2, 0xe0, 0xde, 0xdc, 0xda, 0xd8,
    0xd5, 0xd3, 0xd1, 0xce, 0xcc, 0xc9, 0xc7, 0xc4, 0xc1, 0xbf, 0xbc, 0xb9, 0xb6, 0xb3,
    0xb0, 0xae, 0xab, 0xa8, 0xa5, 0xa2, 0x9f, 0x9c, 0x98, 0x95, 0x92, 0x8f, 0x8c, 0x89,
    0x86, 0x83, 0x80, 0x7c, 0x79, 0x76, 0x73, 0x70, 0x6d, 0x6a, 0x67, 0x63, 0x60, 0x5d,
    0x5a, 0x57, 0x54, 0x51, 0x4f, 0x4c, 0x49, 0x46, 0x43, 0x40, 0x3e, 0x3b, 0x38, 0x36,
    0x33, 0x31, 0x2e, 0x2c, 0x2a, 0x27, 0x25, 0x23, 0x21, 0x1f, 0x1d, 0x1b, 0x19, 0x17,
    0x15, 0x13, 0x12, 0x10, 0x0f, 0x0d, 0x0c, 0x0a, 0x09, 0x08, 0x07, 0x06, 0x05, 0x04,
    0x03, 0x03, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x01, 0x02, 0x03, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0c, 0x0d, 0x0f, 0x10, 0x12, 0x13, 0x15, 0x17, 0x19, 0x1b, 0x1d, 0x1f, 0x21, 0x23,
    0x25, 0x27, 0x2a, 0x2c, 0x2e, 0x31, 0x33, 0x36, 0x38, 0x3b, 0x3e, 0x40, 0x43, 0x46,
    0x49, 0x4c, 0x4f, 0x51, 0x54, 0x57, 0x5a, 0x5d, 0x60, 0x63, 0x67, 0x6a, 0x6d, 0x70,
    0x73, 0x76, 0x79, 0x7c
};


/// код частоты
uint16_t PhaseShift;

/// аккумулятор фазы
uint16_t PhaseAccum;

/// флаг для переключения режима в прерывании
volatile int state = false;

// Обработчик прерывания от АЦП.
ISR( ADC_vect )
{
    // Считываем только значимые 8 бит - значение из диапазона 0...255
    int result = ADCH;    

    // обновляем код частоты
    PhaseShift = result;
}


/**
 * @brief   НАСТРОЙКА АЦП
 * 
 */
void ADC_init()
{
    // Сбрасываем регистр ADCSRB
    ADCSRB = 0;

    // Опорное напряжение - ИСТОЧНИК ПИТАНИЯ ARDUINO:
    bitClear( ADMUX, REFS1 );
    bitSet( ADMUX, REFS0 );

    // формат результата: 8 бит ADCH + 2 бита ADCL
    bitSet( ADMUX, ADLAR );

    // Выбираем КАНАЛ АЦП = AD0
    bitClear( ADMUX, MUX3 );
    bitClear( ADMUX, MUX2 );
    bitClear( ADMUX, MUX1 );
    bitClear( ADMUX, MUX0 );

    // Режим АЦП ВКЛЮЧЕН
    bitSet( ADCSRA, ADEN );

    // Автозапуск ВКЛЮЧЕН
    bitSet( ADCSRA, ADATE );

    // запрещаем прерывания АЦП
    bitClear( ADCSRA, ADIE );

    // Предделитель на 128.
    bitSet( ADCSRA, ADPS2 );
    bitSet( ADCSRA, ADPS1 );
    bitSet( ADCSRA, ADPS0 );

    // Преобразование остановлено.
    bitClear( ADCSRA, ADSC );
}


// Обработчик прерывания по нажатию на кнопку.
void btnpressed( void )
{
    state = !state;

    digitalWrite( LED_BUILTIN, state );

    if ( state )
    {
        bitSet( ADCSRA, ADIE );
        bitSet( ADCSRA, ADSC );
    }
    else
    {
        bitClear( ADCSRA, ADIE );
    }
}


void setup()
{
    // Все настройки АЦП вынесены в отдельную процедуру
    ADC_init();

    // порт D (DDS) на выход
    DDRD = 0b1111'1111;

    // пин кнопки прерывания - на вход
    pinMode( btnint, INPUT_PULLUP );

    //пин встроенного светодиода на вывод
    pinMode( LED_BUILTIN, OUTPUT );

    // Аккумулятор фазы.
    PhaseAccum = 0;
    
    // Предустановка частоты.
    PhaseShift = 12;

    // Подключаем прерывания для кнопки.
    attachPCINT( digitalPinToPCINT( btnint ), btnpressed, FALLING );

    // Бесконечный цикл вывода сигнала
    // Цикл создан с помощью библиотеки CyberLib.h
    Start 
    
        PORTD = sinewave[ highByte( PhaseAccum ) ];

        PhaseAccum = PhaseAccum + ( PhaseShift << 4 ) + 1;

    End
}


void loop()
{
    // здесь у нас ничего нет, все находится в функции void setup()
    // Наша программа никогда не переходит сюда, в void loop()
}
